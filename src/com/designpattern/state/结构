/**
* 封装与Context的一个特定状态相关的行为
*/
public interface State {
  /**
   * 状态对应的处理
   * @param sampleParameter 示例参数，说明可以传入参数，具体传入
   *             什么样的参数，传入几个参数，由具体应用来具体分析
   */
  public void handle(String sampleParameter);
}

/**
* 实现一个与Context的一个特定状态相关的行为
*/
public class ConcreteStateA implements State {
  public void handle(String sampleParameter) {
     //实现具体的处理
  }
}
/**
* 实现一个与Context的一个特定状态相关的行为
*/
public class ConcreteStateB implements State {
  public void handle(String sampleParameter) {
     //实现具体的处理
  }
}

/**
* 定义客户感兴趣的接口，通常会维护一个State类型的对象实例
*/
public class Context {
  /**
   * 持有一个State类型的对象实例
   */
  private State state;
  /**
   * 设置实现State的对象的实例
   * @param state 实现State的对象的实例
   */
  public void setState(State state) {
     this.state = state;
  }
  /**
   * 用户感兴趣的接口方法
   * @param sampleParameter 示意参数
   */
  public void request(String sampleParameter) {
     //在处理中，会转调state来处理
     state.handle(sampleParameter);
  }
}